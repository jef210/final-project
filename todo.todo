Relational Synth To Do:
Display:
  ✔ invisible square note buttons @done (15-03-10 17:59)
    ✔ buttons light up when they are clicked - different colors for each colors @done (15-03-10 17:59)
    ✔ rearrange quadrants @done (15-03-10 17:59)
  ✔ Add Words to Sections @done (15-03-11 13:34)
    ✔ goals, values, roadblocks, stories @done (15-03-11 13:34)
      ✔ top-left=roadblocks, top-right=goals, bottom-left=stories, bottom-right=values @done (15-03-11 13:34)
      ✔ svg images for sections @done (15-03-11 09:53)
  ✔ Drop down mood selections @done (15-03-10 19:35)
    ✔ change colors of mood selection boxes @done (15-03-10 19:43)
    ☐ use jquery click location effect on spot where user clicks
Profile Page:
    ☐ login section, saves to db 
      ☐ create and delete accounts 
    ☐ structure
      ✔ bootstrap accordion create page section that displays on dropdown the session data  @done (15-03-13 15:29)
        ☐ make it dynamically create per session
        ☐ add date and time to title of accordion section
        ☐ includes each session in each section
  ✔ Select chart library @done (15-03-13 15:28)
  ✔ add chart to profile page @done (15-03-13 15:28)
 ☐ create template for accordion item
  ☐ make jade file
  ☐ require the file in the profile-page
  ☐ populate the db with session data
  ☐ fetch data from db and store in a var - array of sessions
  ☐ i over array and for each session append the template to the DOM & inject the vars into the template from the session record
    ☐ display standard deviation chart
    ☐ display entry and exit mood
    ☐ display heat map of session
    ☐ ability to add notes to session

Landing Page:
    ☐ Tutorial
    ☐ what it means
    ☐ how we score it
    ☐ how to use it
    ☐ testimonials
    ☐ features
    ☐ welcome - high level section on what it's all about
    ☐ links
      ☐ sign in
      ☐ profile
      ☐ start session
      ☐ 



General build stuff:
  ✔ migrate to node, express & jade @done (15-03-10 18:00)
  ✔ hide/show parts of the page or create multi pages  @done (15-03-10 18:00)
  ☐ structure MVC
  ☐ get ready for Phonegap/Cordova
    ☐ make it so it starts the pad track on 1st click of 1st pad
    ☐ make it so when user clicks on another it stops the 1st sound and plays the 2nd

Setting up Mongo:
 ✔ create a model file in models @done (15-03-13 16:06)
 ✔ add a mongoose schema to that file @done (15-03-13 16:06)
 ☐ schema needs to match up with whats console logged object with info about start, notes, end
 ☐ create mongoose model
 ☐ in exit session require the model
 ☐ create an instance of the model out of what is logged
 ☐ save the new instance

Functionality:
  ☐ routing to pages
    ✔ main instrument and mood session routes @done (15-03-12 11:18)
    ☐ other routing TBD
  ✔ session to DB @done (15-03-12 11:18)
    ☐ pull session data to profile-page
    ☐ display session data on profile page

  ☐ 3:00 timeout for full session
    ☐ function written poorly but in the right place (ready to be fixed)
  ☐ unlimited instrument session w/ no feedback or playback
    ☐ 
  ☐ unlimited time for instrument session
    ☐ no playback for unlimited session
  ☐ how to quantify the data from instrument interaction
      - How to quantify the quadrants
         * scores for areas based on click interactions
         * area of coverage per session
         * which area did they spend their time in
         * additional questions we're trying to answer
         * willigness to participate score
         * amount of clicks in sections
         * length of time based on 3:00 session and amount of times per day

heights = [offset y]
widths = [offset x]

sumHeights = _.reduce(function(x,y){return x + y}, heights, 0)
meanHeights = sumHeights / heights.length
varianceHeights = _.reduce(function(acc, pt){return acc + (pt - meanHeight)^2}, heights, 0) / heights.length

stdDevheights = Math.sprt(varianceHeight)  

sumWidths = _.reduce(function(x,y){return x + y}, widths, 0)
meanWidths = sumWidths / Widths.length
varianceWidths = _.reduce(function(acc, pt){return acc + (pt - meanWidths)^2}, widths, 0) / widths.length

stdDevWidths = Math.sqrt(varianceWidths)  

acc = accumulate
pt = point


for more info see 

http://derickbailey.com/2014/09/21/calculating-standard-deviation-with-array-map-and-array-reduce-in-javascript/
  ☐ entered data tagged added to session
  
  ☐ instrument voice notes
    ☐ while user interacts with the instrument they have the option to talk and enter notes into their session 
    ☐ add record voice button to instrument page
    ☐ autotune option with sonicapi


User authentication: 
  - passportjs
    ☐ 3 types of users  
      ☐ personal I, personal II, administrator
      ☐ rules to define each user type
      ☐ features for each user type
        ☐ personal I  
          ☐ ability to use the instrument and save 3 sessions
          ☐ sessions auto delete once user creates 4 four sessions
          ☐ no ability to share or save
        ☐ personal II
          ☐ ability to save unlimited sessions (archive system maybe)
          ☐ ability to share on fb
          ☐ ability to add notes to sessions
        ☐ administrative
          ☐ ability to add clientbase to their profile
          ☐ ability to see all session data per user assigned to their account
          ☐ ability to add notes to sessions
        ☐ goup plan / business 

      ☐ Form Validation
        ☐ find a form validation library like jquery validate or parsley
        ☐ use it to validate the input fields
        ☐ use it to validate the user info generated

Settings for instrument:
    ☐ different pads for sections
    ☐ different sounds for pads
    ☐ ability to set pad sounds
    ☐ ability to set volume of pads
    ☐ different note sounds
    ☐ ability to set volume of notes
    ☐ ability to set


- Sonic representation of emotion over quadrants
   * chord tones vs. scale
   * internal vs. external tones and pads
   * colors for buttons vs glyphs or words

- Graphical representation of data
   * how much to display to different user type (client or therapist)
   * how much information to give each user type
   * how to define the user type? 




questions on saturday
what techs to use for each part
- user authentication
  passport - 
- form validation
  - html5 validation - set up patterns
  - something that can wait
    - just add required to the input tags (attribute) 
- multi page vs single page pros and cons
  multi
jquery library that has effects like polymer for touch effects
- keyframe animation 
how to handle the phone stuff
- include fast click library
  touch start touch end jquery events
  media query to           if touch else mouse
- hover effect overrides
  last clicked does it === the same place
- other phone stuff to be aware of

building for mobile vs building for web
html5 geolocation - check it out

read the jquery document 

- animation.css - link ( //cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.3/animate.min.css )
- green sock - link ( //cdnjs.cloudflare.com/ajax/libs/gsap/1.16.0/TweenMax.min.js )

- standard deviation calculations to determine the area of focus on the click events from the instrument interaction









feature branch workflow

1. fork
2. clone
3. create a branch
$ git checkout -b <branch name>
4. code/hack
5. commit/create pull request
6. review code merge pull request
7. sync your master with project master
$ git checkout master
$ git pull upstream
$ git checkout -b <branch name>  


dash application finds all the documentation
zeal free version of dash

what have youtried.com
loopback.io - creates apis
sqlize - a way to write strutured queries for a relational DB
learn the syntax of sql syntax real fast
learn python the hard way
keen.io
unbounce
dayboard.co






lets get a nice granular list going for everything I'll need to do to get all these build using pseudo code and task items


charts
did i install everything I need and how to tell
require high charts?
how i set it up to work
steps to accomplish adding external things like charts, maps, or audio apis to page
how do i append it to the page (jade is still weird for me)
when I write my function to plot my graph how to get it to and from the DB

got to npmjs
look at docs 
npm install
read docs

customize charts
make ajax request to get data
set up chart in accordion
set dummy data



set up route > ajax request > 




profile page
append the session data with the graph to the DOM upon session completion


audio
what are the steps I will need to accomplish to record the voice track and play it back with the track play method
autotune api? 
should I handle the start of recording voice by making it so 


passport
how do i 
create d
ifferent user types ( admin & personal)
how to add different features for each user type
how does that all work - high level understanding


mongo
tasks to accomplish to get the Db connected
I need a Schema?
tasks to accompish the connection to the db
steps and tasks to take this end to end



















